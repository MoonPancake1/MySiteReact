export default class utils {

    static getViews(view) {
        if (view < 10 ** 3) {
            return view;
        } else if (100 > view / 10 ** 3 > 0) {
            return `${Math.round(view / 10 ** 3)} —Ç—ã—Å`;
        } else if (view / 10 ** 6 > 0) {
            return `${Math.round(view / 10 ** 6)} –º–ª–Ω`;
        }

        return `${Math.round(view / 10 ** 9)} –º–ª—Ä–¥`
    }

    static getRate(rate) {
        if (rate === -1) {
            return "–æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç";
        } else if (rate <= 5) {
            return `${rate} ü§í`
        } else if (rate <= 7) {
            return `${rate} üî•`
        }
        return `${rate} ‚ù§Ô∏è`
    }

    static getFormattedDate(dateString) {
        // –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç Date –∏–∑ —Å—Ç—Ä–æ–∫–∏
        const date = new Date(dateString);

        // –ú–∞—Å—Å–∏–≤ –Ω–∞–∑–≤–∞–Ω–∏–π –º–µ—Å—è—Ü–µ–≤ –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ
        const months = [
            "—è–Ω–≤–∞—Ä—è", "—Ñ–µ–≤—Ä–∞–ª—è", "–º–∞—Ä—Ç–∞", "–∞–ø—Ä–µ–ª—è", "–º–∞—è", "–∏—é–Ω—è",
            "–∏—é–ª—è", "–∞–≤–≥—É—Å—Ç–∞", "—Å–µ–Ω—Ç—è–±—Ä—è", "–æ–∫—Ç—è–±—Ä—è", "–Ω–æ—è–±—Ä—è", "–¥–µ–∫–∞–±—Ä—è"
        ];

        // –ü–æ–ª—É—á–∞–µ–º –¥–µ–Ω—å, –º–µ—Å—è—Ü –∏ –≥–æ–¥
        const day = date.getDate();
        const month = months[date.getMonth()]; // –ú–µ—Å—è—Ü—ã –Ω–∞—á–∏–Ω–∞—é—Ç—Å—è —Å 0
        const year = date.getFullYear();

        // –§–æ—Ä–º–∏—Ä—É–µ–º —Å—Ç—Ä–æ–∫—É –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º
        return `${day} ${month} ${year}`;

    }

    static sortProject(projects, title, stack, sort) {
        const regSearchTitle = new RegExp(`${title.toLowerCase()}`);
        const listStack = []
        for (const tech in stack) {
             listStack.push(stack[tech].toLowerCase());
        }
        let newProjects = projects.filter(project =>
            regSearchTitle.test(project.title.toLowerCase())
        );
        newProjects = newProjects.filter(project =>
            this.checkStack(project.stack, listStack) === true
        );
        return newProjects
    }

    static checkStack(projectStack, sortStack) {
        const listProjectStack = []
        for (const cat in projectStack) {
            for (const tech in projectStack[cat]) {
                const techStr = projectStack[cat][tech].toLowerCase()
                if (techStr !== "none")
                    {
                        listProjectStack.push(techStr);
                    }
            }
        }

        const regSortStack = new RegExp(sortStack.join(""));
        const strProjectStack = listProjectStack.join("");

        return regSortStack.test(strProjectStack);
    }
}